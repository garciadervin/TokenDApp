{
  "address": "0x3d55926078F13aF1186C476520104881088F0E13",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "initialSupply",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "allowance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientAllowance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "approver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidApprover",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidReceiver",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSpender",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "idPropiedad",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "propietario",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "valor",
          "type": "uint256"
        }
      ],
      "name": "PropiedadRegistrada",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "idPropiedad",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokens",
          "type": "uint256"
        }
      ],
      "name": "PropiedadTokenizada",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "propietario",
          "type": "address"
        }
      ],
      "name": "consultarPropiedadesPorPropietario",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "valor",
          "type": "uint256"
        }
      ],
      "name": "consultarPropiedadesPorValor",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contadorPropiedades",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "idPropiedad",
          "type": "uint256"
        }
      ],
      "name": "obtenerDetallesPropiedad",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "propiedades",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "valor",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tokens",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "propietario",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "tokenizada",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "valor",
          "type": "uint256"
        }
      ],
      "name": "registrarPropiedad",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "idPropiedad",
          "type": "uint256"
        }
      ],
      "name": "tokenizarPropiedad",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "cantidad",
          "type": "uint256"
        }
      ],
      "name": "transferirTokenPropiedad",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xac27464fdca03137132d8d8c9b810711f6191bc37cb14a36f3b7ecb1fad5bbd0",
  "receipt": {
    "to": null,
    "from": "0x439270C2aE9eD628E51186718639ef07da9d939b",
    "contractAddress": "0x3d55926078F13aF1186C476520104881088F0E13",
    "transactionIndex": 1,
    "gasUsed": "1002259",
    "logsBloom": "0x
    "blockHash": "0xb5abe69d49c69d795d69d5a013ef4740440aeb8c353d0454374ab10016a6b063",
    "transactionHash": "0xac27464fdca03137132d8d8c9b810711f6191bc37cb14a36f3b7ecb1fad5bbd0",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 104973534,
        "transactionHash": "0xac27464fdca03137132d8d8c9b810711f6191bc37cb14a36f3b7ecb1fad5bbd0",
        "address": "0x3d55926078F13aF1186C476520104881088F0E13",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000439270c2ae9ed628e51186718639ef07da9d939b"
        ],
        "data": "0x00000000000000000000000000000000000000000000d3c21bcecceda1000000",
        "logIndex": 0,
        "blockHash": "0xb5abe69d49c69d795d69d5a013ef4740440aeb8c353d0454374ab10016a6b063"
      }
    ],
    "blockNumber": 104973534,
    "cumulativeGasUsed": "1002259",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "1000000000000000000000000"
  ],
  "numDeployments": 8,
  "solcInputHash": "4087e17c417bcda925e63f5c00afa756",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"idPropiedad\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"propietario\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"valor\",\"type\":\"uint256\"}],\"name\":\"PropiedadRegistrada\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"idPropiedad\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"PropiedadTokenizada\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"propietario\",\"type\":\"address\"}],\"name\":\"consultarPropiedadesPorPropietario\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"valor\",\"type\":\"uint256\"}],\"name\":\"consultarPropiedadesPorValor\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contadorPropiedades\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idPropiedad\",\"type\":\"uint256\"}],\"name\":\"obtenerDetallesPropiedad\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"propiedades\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"valor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"propietario\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"tokenizada\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"valor\",\"type\":\"uint256\"}],\"name\":\"registrarPropiedad\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idPropiedad\",\"type\":\"uint256\"}],\"name\":\"tokenizarPropiedad\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cantidad\",\"type\":\"uint256\"}],\"name\":\"transferirTokenPropiedad\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contrato para tokenizar propiedades inmobiliarias utilizando ERC20\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Constructor que inicializa el suministro inicial de tokens\",\"params\":{\"initialSupply\":\"Suministro inicial de tokens\"}},\"consultarPropiedadesPorPropietario(address)\":{\"details\":\"Consultar propiedades por propietario\",\"params\":{\"propietario\":\"Direcci\\u00f3n del propietario\"},\"returns\":{\"_0\":\"ids Array de IDs de propiedades pertenecientes al propietario\"}},\"consultarPropiedadesPorValor(uint256)\":{\"details\":\"Consultar propiedades por valor\",\"params\":{\"valor\":\"Valor de la propiedad\"},\"returns\":{\"_0\":\"ids Array de IDs de propiedades con el valor especificado\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"obtenerDetallesPropiedad(uint256)\":{\"details\":\"Obtener detalles de una propiedad registrada\",\"params\":{\"idPropiedad\":\"ID de la propiedad\"},\"returns\":{\"_0\":\"valor Valor de la propiedad\",\"_1\":\"tokens Cantidad de tokens asignados a la propiedad\",\"_2\":\"propietario Direcci\\u00f3n del propietario de la propiedad\",\"_3\":\"tokenizada Estado de tokenizaci\\u00f3n de la propiedad\"}},\"registrarPropiedad(uint256)\":{\"details\":\"Funci\\u00f3n para registrar una nueva propiedad\",\"params\":{\"valor\":\"Valor de la propiedad en wei\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"tokenizarPropiedad(uint256)\":{\"details\":\"Funci\\u00f3n para tokenizar una propiedad registrada\",\"params\":{\"idPropiedad\":\"ID de la propiedad a tokenizar\"}},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferirTokenPropiedad(address,uint256)\":{\"details\":\"Funci\\u00f3n para transferir tokens de propiedad a otra direcci\\u00f3n\",\"params\":{\"cantidad\":\"Cantidad de tokens a transferir\",\"to\":\"Direcci\\u00f3n del destinatario\"}}},\"title\":\"RealEstateToken\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RealEstateToken.sol\":\"RealEstateToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/RealEstateToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\n\\n/**\\n * @title RealEstateToken\\n * @dev Contrato para tokenizar propiedades inmobiliarias utilizando ERC20\\n */\\ncontract RealEstateToken is ERC20 {\\n    address public owner;\\n\\n    // Estructura que representa una propiedad\\n    struct Propiedad {\\n        uint256 valor; // Valor de la propiedad en wei\\n        uint256 tokens; // Cantidad de tokens asignados a la propiedad\\n        address propietario; // Direcci\\u00f3n del propietario de la propiedad\\n        bool tokenizada; // Estado de tokenizaci\\u00f3n de la propiedad\\n    }\\n\\n    uint256 public contadorPropiedades; // Contador de propiedades registradas\\n    mapping(uint256 => Propiedad) public propiedades; // Mapeo de ID de propiedad a Propiedad\\n\\n    event PropiedadRegistrada(uint256 indexed idPropiedad, address indexed propietario, uint256 valor);\\n    event PropiedadTokenizada(uint256 indexed idPropiedad, uint256 tokens);\\n\\n    /**\\n     * @dev Constructor que inicializa el suministro inicial de tokens\\n     * @param initialSupply Suministro inicial de tokens\\n     */\\n    constructor(uint256 initialSupply) ERC20(\\\"Real Estate Token\\\", \\\"RET\\\") {\\n        _mint(msg.sender, initialSupply);\\n        owner = msg.sender;\\n    }\\n\\n    modifier onlyOwner() {\\n        require(msg.sender == owner, \\\"Only the owner can mint tokens\\\");\\n        _;\\n    }\\n        \\n    function mint(address to, uint256 amount) public onlyOwner {\\n        _mint(to, amount);\\n    }\\n\\n    /**\\n     * @dev Funci\\u00f3n para registrar una nueva propiedad\\n     * @param valor Valor de la propiedad en wei\\n     */\\n    function registrarPropiedad(uint256 valor) external {\\n        require(valor > 0, \\\"El valor de la propiedad debe ser mayor a 0\\\");\\n\\n        propiedades[contadorPropiedades] = Propiedad({\\n            valor: valor,\\n            tokens: 0,\\n            propietario: msg.sender,\\n            tokenizada: false\\n        });\\n        emit PropiedadRegistrada(contadorPropiedades, msg.sender, valor);\\n        contadorPropiedades++;\\n    }\\n\\n    /**\\n     * @dev Funci\\u00f3n para tokenizar una propiedad registrada\\n     * @param idPropiedad ID de la propiedad a tokenizar\\n     */\\n    function tokenizarPropiedad(uint256 idPropiedad) external {\\n        Propiedad storage propiedad = propiedades[idPropiedad];\\n        require(!propiedad.tokenizada, \\\"Propiedad ya tokenizada\\\");\\n        require(propiedad.propietario == msg.sender, \\\"Solo el propietario puede tokenizar la propiedad\\\");\\n\\n        // La cantidad de tokens asignados es igual al valor de la propiedad en wei\\n        uint256 tokens = propiedad.valor;\\n        propiedad.tokens = tokens;\\n        propiedad.tokenizada = true;\\n        _mint(propiedad.propietario, tokens);\\n\\n        emit PropiedadTokenizada(idPropiedad, tokens);\\n    }\\n\\n    /**\\n     * @dev Funci\\u00f3n para transferir tokens de propiedad a otra direcci\\u00f3n\\n     * @param to Direcci\\u00f3n del destinatario\\n     * @param cantidad Cantidad de tokens a transferir\\n     */\\n    function transferirTokenPropiedad(address to, uint256 cantidad) external {\\n        require(to != address(0) && balanceOf(msg.sender) >= cantidad, \\\"Transferencia invalida\\\");\\n\\n        _transfer(msg.sender, to, cantidad);\\n    }\\n\\n    /**\\n     * @dev Obtener detalles de una propiedad registrada\\n     * @param idPropiedad ID de la propiedad\\n     * @return valor Valor de la propiedad\\n     * @return tokens Cantidad de tokens asignados a la propiedad\\n     * @return propietario Direcci\\u00f3n del propietario de la propiedad\\n     * @return tokenizada Estado de tokenizaci\\u00f3n de la propiedad\\n     */\\n    function obtenerDetallesPropiedad(uint256 idPropiedad) external view returns (uint256, uint256, address, bool) {\\n        Propiedad storage propiedad = propiedades[idPropiedad];\\n        return (propiedad.valor, propiedad.tokens, propiedad.propietario, propiedad.tokenizada);\\n    }\\n\\n    /**\\n     * @dev Consultar propiedades por propietario\\n     * @param propietario Direcci\\u00f3n del propietario\\n     * @return ids Array de IDs de propiedades pertenecientes al propietario\\n     */\\n    function consultarPropiedadesPorPropietario(address propietario) external view returns (uint256[] memory) {\\n        uint256[] memory ids = new uint256[](contadorPropiedades);\\n        uint256 count = 0;\\n        for (uint256 i = 0; i < contadorPropiedades; i++) {\\n            if (propiedades[i].propietario == propietario) {\\n                ids[count] = i;\\n                count++;\\n            }\\n        }\\n        return ids;\\n    }\\n\\n    /**\\n     * @dev Consultar propiedades por valor\\n     * @param valor Valor de la propiedad\\n     * @return ids Array de IDs de propiedades con el valor especificado\\n     */\\n    function consultarPropiedadesPorValor(uint256 valor) external view returns (uint256[] memory) {\\n        uint256[] memory ids = new uint256[](contadorPropiedades);\\n        uint256 count = 0;\\n        for (uint256 i = 0; i < contadorPropiedades; i++) {\\n            if (propiedades[i].valor == valor) {\\n                ids[count] = i;\\n                count++;\\n            }\\n        }\\n        return ids;\\n    }\\n}\\n\",\"keccak256\":\"0x05c63a854fece93581500b131a110579f7c2bebee710d5a9f3b8794a78020633\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620012bf380380620012bf83398101604081905262000034916200023d565b604051806040016040528060118152602001702932b0b61022b9ba30ba32902a37b5b2b760791b8152506040518060400160405280600381526020016214915560ea1b81525081600390816200008b9190620002fc565b5060046200009a8282620002fc565b505050620000af3382620000c860201b60201c565b50600580546001600160a01b03191633179055620003f0565b6001600160a01b038216620000f85760405163ec442f0560e01b8152600060048201526024015b60405180910390fd5b62000106600083836200010a565b5050565b6001600160a01b038316620001395780600260008282546200012d9190620003c8565b90915550620001ad9050565b6001600160a01b038316600090815260208190526040902054818110156200018e5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401620000ef565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216620001cb57600280548290039055620001ea565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200023091815260200190565b60405180910390a3505050565b6000602082840312156200025057600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200028257607f821691505b602082108103620002a357634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002f757600081815260208120601f850160051c81016020861015620002d25750805b601f850160051c820191505b81811015620002f357828155600101620002de565b5050505b505050565b81516001600160401b0381111562000318576200031862000257565b62000330816200032984546200026d565b84620002a9565b602080601f8311600181146200036857600084156200034f5750858301515b600019600386901b1c1916600185901b178555620002f3565b600085815260208120601f198616915b82811015620003995788860151825594840194600190910190840162000378565b5085821015620003b85787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b80820180821115620003ea57634e487b7160e01b600052601160045260246000fd5b92915050565b610ebf80620004006000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806350c257f4116100ad578063a821f5bb11610071578063a821f5bb146102c3578063a9059cbb146102e3578063c0db7183146102f6578063db2b539414610339578063dd62ed3e1461034c57600080fd5b806350c257f41461024b5780636ab06ecf1461025457806370a08231146102675780638da5cb5b1461029057806395d89b41146102bb57600080fd5b806314e8d8bc116100f457806314e8d8bc146101f157806318160ddd1461020457806323b872dd14610216578063313ce5671461022957806340c10f191461023857600080fd5b806306fdde0314610126578063095ea7b3146101445780630bb5643b14610167578063123fe5ce146101dc575b600080fd5b61012e610385565b60405161013b9190610c5f565b60405180910390f35b610157610152366004610cc9565b610417565b604051901515815260200161013b565b6101ab610175366004610cf3565b6007602052600090815260409020805460018201546002909201549091906001600160a01b03811690600160a01b900460ff1684565b60405161013b949392919093845260208401929092526001600160a01b031660408301521515606082015260800190565b6101ef6101ea366004610cc9565b610431565b005b6101ef6101ff366004610cf3565b6104b1565b6002545b60405190815260200161013b565b610157610224366004610d0c565b610602565b6040516012815260200161013b565b6101ef610246366004610cc9565b610626565b61020860065481565b6101ef610262366004610cf3565b61068a565b610208610275366004610d48565b6001600160a01b031660009081526020819052604090205490565b6005546102a3906001600160a01b031681565b6040516001600160a01b03909116815260200161013b565b61012e6107ad565b6102d66102d1366004610d48565b6107bc565b60405161013b9190610d6a565b6101576102f1366004610cc9565b610880565b6101ab610304366004610cf3565b60009081526007602052604090208054600182015460029092015490926001600160a01b03821691600160a01b900460ff1690565b6102d6610347366004610cf3565b61088e565b61020861035a366004610dae565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60606003805461039490610de1565b80601f01602080910402602001604051908101604052809291908181526020018280546103c090610de1565b801561040d5780601f106103e25761010080835404028352916020019161040d565b820191906000526020600020905b8154815290600101906020018083116103f057829003601f168201915b5050505050905090565b60003361042581858561093b565b60019150505b92915050565b6001600160a01b038216158015906104585750336000908152602081905260409020548111155b6104a25760405162461bcd60e51b81526020600482015260166024820152755472616e73666572656e63696120696e76616c69646160501b60448201526064015b60405180910390fd5b6104ad33838361094d565b5050565b60008181526007602052604090206002810154600160a01b900460ff161561051b5760405162461bcd60e51b815260206004820152601760248201527f50726f70696564616420796120746f6b656e697a6164610000000000000000006044820152606401610499565b60028101546001600160a01b031633146105905760405162461bcd60e51b815260206004820152603060248201527f536f6c6f20656c2070726f706965746172696f20707565646520746f6b656e6960448201526f1e985c881b18481c1c9bdc1a5959185960821b6064820152608401610499565b80546001820181905560028201805460ff60a01b198116600160a01b179091556105c3906001600160a01b0316826109ac565b827fcec5e385253ac1a6eb4fa7623fea0b2036579c8601155d3c7ec9ee3702188e99826040516105f591815260200190565b60405180910390a2505050565b6000336106108582856109e2565b61061b85858561094d565b506001949350505050565b6005546001600160a01b031633146106805760405162461bcd60e51b815260206004820152601e60248201527f4f6e6c7920746865206f776e65722063616e206d696e7420746f6b656e7300006044820152606401610499565b6104ad82826109ac565b600081116106ee5760405162461bcd60e51b815260206004820152602b60248201527f456c2076616c6f72206465206c612070726f706965646164206465626520736560448201526a072206d61796f72206120360ac1b6064820152608401610499565b6040805160808101825282815260006020808301828152338486018181526060860185815260068054875260078652958890209651875592516001870155516002909501805492511515600160a01b026001600160a81b03199093166001600160a01b039096169590951791909117909355905492518481529192917f515615706d61de853a3df79ed21574c1d19ca57b913018b094a2479441f0593c910160405180910390a3600680549060006107a583610e31565b919050555050565b60606004805461039490610de1565b6060600060065467ffffffffffffffff8111156107db576107db610e4a565b604051908082528060200260200182016040528015610804578160200160208202803683370190505b5090506000805b600654811015610877576000818152600760205260409020600201546001600160a01b03808716911603610865578083838151811061084c5761084c610e60565b60209081029190910101528161086181610e31565b9250505b8061086f81610e31565b91505061080b565b50909392505050565b60003361042581858561094d565b6060600060065467ffffffffffffffff8111156108ad576108ad610e4a565b6040519080825280602002602001820160405280156108d6578160200160208202803683370190505b5090506000805b60065481101561087757600081815260076020526040902054859003610929578083838151811061091057610910610e60565b60209081029190910101528161092581610e31565b9250505b8061093381610e31565b9150506108dd565b6109488383836001610a60565b505050565b6001600160a01b03831661097757604051634b637e8f60e11b815260006004820152602401610499565b6001600160a01b0382166109a15760405163ec442f0560e01b815260006004820152602401610499565b610948838383610b35565b6001600160a01b0382166109d65760405163ec442f0560e01b815260006004820152602401610499565b6104ad60008383610b35565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610a5a5781811015610a4b57604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610499565b610a5a84848484036000610a60565b50505050565b6001600160a01b038416610a8a5760405163e602df0560e01b815260006004820152602401610499565b6001600160a01b038316610ab457604051634a1406b160e11b815260006004820152602401610499565b6001600160a01b0380851660009081526001602090815260408083209387168352929052208290558015610a5a57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610b2791815260200190565b60405180910390a350505050565b6001600160a01b038316610b60578060026000828254610b559190610e76565b90915550610bd29050565b6001600160a01b03831660009081526020819052604090205481811015610bb35760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610499565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216610bee57600280548290039055610c0d565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610c5291815260200190565b60405180910390a3505050565b600060208083528351808285015260005b81811015610c8c57858101830151858201604001528201610c70565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610cc457600080fd5b919050565b60008060408385031215610cdc57600080fd5b610ce583610cad565b946020939093013593505050565b600060208284031215610d0557600080fd5b5035919050565b600080600060608486031215610d2157600080fd5b610d2a84610cad565b9250610d3860208501610cad565b9150604084013590509250925092565b600060208284031215610d5a57600080fd5b610d6382610cad565b9392505050565b6020808252825182820181905260009190848201906040850190845b81811015610da257835183529284019291840191600101610d86565b50909695505050505050565b60008060408385031215610dc157600080fd5b610dca83610cad565b9150610dd860208401610cad565b90509250929050565b600181811c90821680610df557607f821691505b602082108103610e1557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600060018201610e4357610e43610e1b565b5060010190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b8082018082111561042b5761042b610e1b56fea264697066735822122049a448ac20c5e705d6f1ed7aba04d5d028c2f8898e2ca8a6d9cccadd1d070d5264736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101215760003560e01c806350c257f4116100ad578063a821f5bb11610071578063a821f5bb146102c3578063a9059cbb146102e3578063c0db7183146102f6578063db2b539414610339578063dd62ed3e1461034c57600080fd5b806350c257f41461024b5780636ab06ecf1461025457806370a08231146102675780638da5cb5b1461029057806395d89b41146102bb57600080fd5b806314e8d8bc116100f457806314e8d8bc146101f157806318160ddd1461020457806323b872dd14610216578063313ce5671461022957806340c10f191461023857600080fd5b806306fdde0314610126578063095ea7b3146101445780630bb5643b14610167578063123fe5ce146101dc575b600080fd5b61012e610385565b60405161013b9190610c5f565b60405180910390f35b610157610152366004610cc9565b610417565b604051901515815260200161013b565b6101ab610175366004610cf3565b6007602052600090815260409020805460018201546002909201549091906001600160a01b03811690600160a01b900460ff1684565b60405161013b949392919093845260208401929092526001600160a01b031660408301521515606082015260800190565b6101ef6101ea366004610cc9565b610431565b005b6101ef6101ff366004610cf3565b6104b1565b6002545b60405190815260200161013b565b610157610224366004610d0c565b610602565b6040516012815260200161013b565b6101ef610246366004610cc9565b610626565b61020860065481565b6101ef610262366004610cf3565b61068a565b610208610275366004610d48565b6001600160a01b031660009081526020819052604090205490565b6005546102a3906001600160a01b031681565b6040516001600160a01b03909116815260200161013b565b61012e6107ad565b6102d66102d1366004610d48565b6107bc565b60405161013b9190610d6a565b6101576102f1366004610cc9565b610880565b6101ab610304366004610cf3565b60009081526007602052604090208054600182015460029092015490926001600160a01b03821691600160a01b900460ff1690565b6102d6610347366004610cf3565b61088e565b61020861035a366004610dae565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60606003805461039490610de1565b80601f01602080910402602001604051908101604052809291908181526020018280546103c090610de1565b801561040d5780601f106103e25761010080835404028352916020019161040d565b820191906000526020600020905b8154815290600101906020018083116103f057829003601f168201915b5050505050905090565b60003361042581858561093b565b60019150505b92915050565b6001600160a01b038216158015906104585750336000908152602081905260409020548111155b6104a25760405162461bcd60e51b81526020600482015260166024820152755472616e73666572656e63696120696e76616c69646160501b60448201526064015b60405180910390fd5b6104ad33838361094d565b5050565b60008181526007602052604090206002810154600160a01b900460ff161561051b5760405162461bcd60e51b815260206004820152601760248201527f50726f70696564616420796120746f6b656e697a6164610000000000000000006044820152606401610499565b60028101546001600160a01b031633146105905760405162461bcd60e51b815260206004820152603060248201527f536f6c6f20656c2070726f706965746172696f20707565646520746f6b656e6960448201526f1e985c881b18481c1c9bdc1a5959185960821b6064820152608401610499565b80546001820181905560028201805460ff60a01b198116600160a01b179091556105c3906001600160a01b0316826109ac565b827fcec5e385253ac1a6eb4fa7623fea0b2036579c8601155d3c7ec9ee3702188e99826040516105f591815260200190565b60405180910390a2505050565b6000336106108582856109e2565b61061b85858561094d565b506001949350505050565b6005546001600160a01b031633146106805760405162461bcd60e51b815260206004820152601e60248201527f4f6e6c7920746865206f776e65722063616e206d696e7420746f6b656e7300006044820152606401610499565b6104ad82826109ac565b600081116106ee5760405162461bcd60e51b815260206004820152602b60248201527f456c2076616c6f72206465206c612070726f706965646164206465626520736560448201526a072206d61796f72206120360ac1b6064820152608401610499565b6040805160808101825282815260006020808301828152338486018181526060860185815260068054875260078652958890209651875592516001870155516002909501805492511515600160a01b026001600160a81b03199093166001600160a01b039096169590951791909117909355905492518481529192917f515615706d61de853a3df79ed21574c1d19ca57b913018b094a2479441f0593c910160405180910390a3600680549060006107a583610e31565b919050555050565b60606004805461039490610de1565b6060600060065467ffffffffffffffff8111156107db576107db610e4a565b604051908082528060200260200182016040528015610804578160200160208202803683370190505b5090506000805b600654811015610877576000818152600760205260409020600201546001600160a01b03808716911603610865578083838151811061084c5761084c610e60565b60209081029190910101528161086181610e31565b9250505b8061086f81610e31565b91505061080b565b50909392505050565b60003361042581858561094d565b6060600060065467ffffffffffffffff8111156108ad576108ad610e4a565b6040519080825280602002602001820160405280156108d6578160200160208202803683370190505b5090506000805b60065481101561087757600081815260076020526040902054859003610929578083838151811061091057610910610e60565b60209081029190910101528161092581610e31565b9250505b8061093381610e31565b9150506108dd565b6109488383836001610a60565b505050565b6001600160a01b03831661097757604051634b637e8f60e11b815260006004820152602401610499565b6001600160a01b0382166109a15760405163ec442f0560e01b815260006004820152602401610499565b610948838383610b35565b6001600160a01b0382166109d65760405163ec442f0560e01b815260006004820152602401610499565b6104ad60008383610b35565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610a5a5781811015610a4b57604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610499565b610a5a84848484036000610a60565b50505050565b6001600160a01b038416610a8a5760405163e602df0560e01b815260006004820152602401610499565b6001600160a01b038316610ab457604051634a1406b160e11b815260006004820152602401610499565b6001600160a01b0380851660009081526001602090815260408083209387168352929052208290558015610a5a57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610b2791815260200190565b60405180910390a350505050565b6001600160a01b038316610b60578060026000828254610b559190610e76565b90915550610bd29050565b6001600160a01b03831660009081526020819052604090205481811015610bb35760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610499565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216610bee57600280548290039055610c0d565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610c5291815260200190565b60405180910390a3505050565b600060208083528351808285015260005b81811015610c8c57858101830151858201604001528201610c70565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610cc457600080fd5b919050565b60008060408385031215610cdc57600080fd5b610ce583610cad565b946020939093013593505050565b600060208284031215610d0557600080fd5b5035919050565b600080600060608486031215610d2157600080fd5b610d2a84610cad565b9250610d3860208501610cad565b9150604084013590509250925092565b600060208284031215610d5a57600080fd5b610d6382610cad565b9392505050565b6020808252825182820181905260009190848201906040850190845b81811015610da257835183529284019291840191600101610d86565b50909695505050505050565b60008060408385031215610dc157600080fd5b610dca83610cad565b9150610dd860208401610cad565b90509250929050565b600181811c90821680610df557607f821691505b602082108103610e1557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600060018201610e4357610e43610e1b565b5060010190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b8082018082111561042b5761042b610e1b56fea264697066735822122049a448ac20c5e705d6f1ed7aba04d5d028c2f8898e2ca8a6d9cccadd1d070d5264736f6c63430008140033",
  "devdoc": {
    "details": "Contrato para tokenizar propiedades inmobiliarias utilizando ERC20",
    "errors": {
      "ERC20InsufficientAllowance(address,uint256,uint256)": [
        {
          "details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
          "params": {
            "allowance": "Amount of tokens a `spender` is allowed to operate with.",
            "needed": "Minimum amount required to perform a transfer.",
            "spender": "Address that may be allowed to operate on tokens without being their owner."
          }
        }
      ],
      "ERC20InsufficientBalance(address,uint256,uint256)": [
        {
          "details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
          "params": {
            "balance": "Current balance for the interacting account.",
            "needed": "Minimum amount required to perform a transfer.",
            "sender": "Address whose tokens are being transferred."
          }
        }
      ],
      "ERC20InvalidApprover(address)": [
        {
          "details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
          "params": {
            "approver": "Address initiating an approval operation."
          }
        }
      ],
      "ERC20InvalidReceiver(address)": [
        {
          "details": "Indicates a failure with the token `receiver`. Used in transfers.",
          "params": {
            "receiver": "Address to which tokens are being transferred."
          }
        }
      ],
      "ERC20InvalidSender(address)": [
        {
          "details": "Indicates a failure with the token `sender`. Used in transfers.",
          "params": {
            "sender": "Address whose tokens are being transferred."
          }
        }
      ],
      "ERC20InvalidSpender(address)": [
        {
          "details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
          "params": {
            "spender": "Address that may be allowed to operate on tokens without being their owner."
          }
        }
      ]
    },
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
      }
    },
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "constructor": {
        "details": "Constructor que inicializa el suministro inicial de tokens",
        "params": {
          "initialSupply": "Suministro inicial de tokens"
        }
      },
      "consultarPropiedadesPorPropietario(address)": {
        "details": "Consultar propiedades por propietario",
        "params": {
          "propietario": "Dirección del propietario"
        },
        "returns": {
          "_0": "ids Array de IDs de propiedades pertenecientes al propietario"
        }
      },
      "consultarPropiedadesPorValor(uint256)": {
        "details": "Consultar propiedades por valor",
        "params": {
          "valor": "Valor de la propiedad"
        },
        "returns": {
          "_0": "ids Array de IDs de propiedades con el valor especificado"
        }
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "obtenerDetallesPropiedad(uint256)": {
        "details": "Obtener detalles de una propiedad registrada",
        "params": {
          "idPropiedad": "ID de la propiedad"
        },
        "returns": {
          "_0": "valor Valor de la propiedad",
          "_1": "tokens Cantidad de tokens asignados a la propiedad",
          "_2": "propietario Dirección del propietario de la propiedad",
          "_3": "tokenizada Estado de tokenización de la propiedad"
        }
      },
      "registrarPropiedad(uint256)": {
        "details": "Función para registrar una nueva propiedad",
        "params": {
          "valor": "Valor de la propiedad en wei"
        }
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "tokenizarPropiedad(uint256)": {
        "details": "Función para tokenizar una propiedad registrada",
        "params": {
          "idPropiedad": "ID de la propiedad a tokenizar"
        }
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
      },
      "transferirTokenPropiedad(address,uint256)": {
        "details": "Función para transferir tokens de propiedad a otra dirección",
        "params": {
          "cantidad": "Cantidad de tokens a transferir",
          "to": "Dirección del destinatario"
        }
      }
    },
    "title": "RealEstateToken",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 159,
        "contract": "contracts/RealEstateToken.sol:RealEstateToken",
        "label": "_balances",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 165,
        "contract": "contracts/RealEstateToken.sol:RealEstateToken",
        "label": "_allowances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 167,
        "contract": "contracts/RealEstateToken.sol:RealEstateToken",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 169,
        "contract": "contracts/RealEstateToken.sol:RealEstateToken",
        "label": "_name",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 171,
        "contract": "contracts/RealEstateToken.sol:RealEstateToken",
        "label": "_symbol",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 793,
        "contract": "contracts/RealEstateToken.sol:RealEstateToken",
        "label": "owner",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 804,
        "contract": "contracts/RealEstateToken.sol:RealEstateToken",
        "label": "contadorPropiedades",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 809,
        "contract": "contracts/RealEstateToken.sol:RealEstateToken",
        "label": "propiedades",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_uint256,t_struct(Propiedad)802_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_struct(Propiedad)802_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct RealEstateToken.Propiedad)",
        "numberOfBytes": "32",
        "value": "t_struct(Propiedad)802_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Propiedad)802_storage": {
        "encoding": "inplace",
        "label": "struct RealEstateToken.Propiedad",
        "members": [
          {
            "astId": 795,
            "contract": "contracts/RealEstateToken.sol:RealEstateToken",
            "label": "valor",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 797,
            "contract": "contracts/RealEstateToken.sol:RealEstateToken",
            "label": "tokens",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 799,
            "contract": "contracts/RealEstateToken.sol:RealEstateToken",
            "label": "propietario",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 801,
            "contract": "contracts/RealEstateToken.sol:RealEstateToken",
            "label": "tokenizada",
            "offset": 20,
            "slot": "2",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}